pid /var/run/nginx.pid;

events {
    worker_connections 768;
}

http {
    charset                 utf-8;
    tcp_nopush              on;
    tcp_nodelay             on;
    keepalive_timeout       65;
    types_hash_max_size     2048;

    log_format main '$time_iso8601 $status $upstream_status remote=$remote_addr host=$host '
                    'req="$request" referer=$http_referer reqlen=$request_length bodybs=$body_bytes_sent '
                    'rt=$request_time uct=$upstream_connect_time uht=$upstream_header_time urt=$upstream_response_time '
                    '"$http_user_agent"';

    server {
        listen 80 default_server;
        access_log              /var/log/nginx/no_res_access.log main;

        return 444;
    }
    server {
        listen 443 default_server ssl;

        ssl_certificate         /etc/nginx/ssl/live/${your.domain.com}/fullchain.pem;
        ssl_certificate_key     /etc/nginx/ssl/live/${your.domain.com}/privkey.pem;

        access_log              /var/log/nginx/no_res_access.log main;

        return 444;
    }

    server {
        listen                  80;

        server_name             ${your.domain.com}; 

        charset                 utf-8;
        autoindex_localtime     on;
        server_tokens           off;
        autoindex               off;
        access_log              /var/log/nginx/access.log main;
	
        client_body_timeout     5s;
        client_header_timeout   5s;

        location / {
            # return 301 https://$host$request_uri;

            access_log              /var/log/nginx/no_res_access.log main;
            return 444;
        }

        location /.well-known/acme-challenge/ {
            allow               all;
            alias               /var/www/certbot/.well-known/acme-challenge/;
        }

        location /robots.txt {
            return 200 'User-agent: *\nDisallow: /';
        }
    }

    server {
        listen                  443 ssl;

        server_name             ${your.domain.com}; 

        ssl_certificate         /etc/nginx/ssl/live/${your.domain.com}/fullchain.pem;
        ssl_certificate_key     /etc/nginx/ssl/live/${your.domain.com}/privkey.pem;

        charset                 utf-8;
        sendfile                on;
        autoindex_localtime     on;
        server_tokens           off;
        autoindex               off;
        access_log              /var/log/nginx/access.log main; 

        client_body_timeout     5s;
        client_header_timeout   5s;
        client_max_body_size    0;

        location / {
            proxy_pass          http://wiki:3000;
        }

        location /graphql {
            proxy_pass          http://wiki:3000;

            proxy_intercept_errors on;
            error_page 500 @proxy_debug;
        }

        location @proxy_debug {
            access_log          /var/log/nginx/access_debug.log main;
            error_log           /var/log/nginx/error_debug.log;
            return 400;
        }

        location /_assets/ {
            expires 1M;
            add_header Cache-Control "public";
            access_log off;

            proxy_pass          http://wiki:3000;
        }

        location /pub/ {
            expires 2M;
            add_header Cache-Control "public";
            access_log off;

            alias               /var/www/public/;
        }

        location /kroki {
            expires -1;
            add_header Cache-Control "public";
            if ($http_referer !~ ^https://${your.domain.com}) {
                return 301 '/login';
            }

            rewrite /kroki/(.*) /$1 break;
            proxy_pass          http://kroki:8000;
            proxy_redirect      off;
            proxy_set_header    Host $host;
        }

        location /plantuml {
            expires -1;
            add_header Cache-Control "public";

            proxy_redirect      off;
            proxy_set_header    Host $host;

            if ($http_referer ~* (${your.domain.com}|${vscode.domain.com}|vscode-cdn.net)) {
                proxy_pass          http://plantuml:8080;
                break;
            }

            return 301 '/login';
        }

        location = /favicon.ico {
            expires             max;
            access_log          off;
            alias               /var/www/public/favicon.ico;
        }

        location /_assets/favicons/ {
            expires             max;
            access_log          off;

            alias               /var/www/public/favicon_package/;
            # https://realfavicongenerator.net
        }

        location /robots.txt {
            return 200 'User-agent: *\nDisallow: /';
        }
    }

    server {
        listen                  80;

        server_name             ${vscode.domain.com};

        charset                 utf-8;
        autoindex_localtime     on;
        server_tokens           off;
        autoindex               off;
        access_log              /var/log/nginx/access.log main;

        client_body_timeout     5s;
        client_header_timeout   5s;

        location / {
            return 301 https://$host$request_uri;
        }

        location /.well-known/acme-challenge/ {
            allow               all;
            alias               /var/www/certbot/.well-known/acme-challenge/;
        }

        location /robots.txt {
            return 200 'User-agent: *\nDisallow: /';
        }
    }

    server {
        listen                  443 ssl;

        server_name             ${vscode.domain.com};

        ssl_certificate         /etc/nginx/ssl/live/${vscode.domain.com}/fullchain.pem;
        ssl_certificate_key     /etc/nginx/ssl/live/${vscode.domain.com}/privkey.pem;

        charset                 utf-8;
        sendfile                on;
        autoindex_localtime     on;
        server_tokens           off;
        autoindex               off;
        access_log              /var/log/nginx/access.log main;

        client_body_timeout     5s;
        client_header_timeout   5s;
        client_max_body_size    0;

        location / {
            proxy_pass          http://vscode-gateway:3000;
            proxy_http_version  1.1;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection "upgrade";
        }

        location /pub/ {
            expires 2M;
            add_header Cache-Control "public";
            access_log off;

            alias               /var/www/public/;
        }

        location = /favicon.ico {
            expires             max;
            access_log          off;
            alias               /var/www/public/vscode_favicon.ico;
        }

    }
}